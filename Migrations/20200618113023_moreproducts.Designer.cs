// <auto-generated />
using System;
using ExpenseWeb.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpenseWeb.Migrations
{
    [DbContext(typeof(ExpenseContext))]
    [Migration("20200618113023_moreproducts")]
    partial class moreproducts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExpenseWeb.Domain.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentStatusId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ExpenseWeb.Domain.ExpenseProduct", b =>
                {
                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ExpenseId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("expenseProducts");
                });

            modelBuilder.Entity("ExpenseWeb.Domain.PaymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("paymentStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Already payed"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Not payed"
                        });
                });

            modelBuilder.Entity("ExpenseWeb.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sla"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tomaat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ui"
                        },
                        new
                        {
                            Id = 4,
                            Name = "kip"
                        },
                        new
                        {
                            Id = 5,
                            Name = "patatten"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pizza"
                        });
                });

            modelBuilder.Entity("ExpenseWeb.Domain.Expense", b =>
                {
                    b.HasOne("ExpenseWeb.Domain.PaymentStatus", "PaymentStatus")
                        .WithMany("Expenses")
                        .HasForeignKey("PaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpenseWeb.Domain.ExpenseProduct", b =>
                {
                    b.HasOne("ExpenseWeb.Domain.Expense", "Expense")
                        .WithMany("ExpenseProducts")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseWeb.Domain.Product", "Product")
                        .WithMany("ExpenseProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
